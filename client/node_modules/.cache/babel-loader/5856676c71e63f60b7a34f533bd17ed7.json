{"ast":null,"code":"var _jsxFileName = \"/Users/akshaysanjaybodkhe/Downloads/DSTORE-Decentralised-Cloud-Storage-main/client/src/pages/Authenticate/Authenticate.js\";\nimport React, { Component, useState } from 'react';\nimport { Navigate } from \"react-router-dom\";\nimport LoginInfoContract from \"./../../contracts/LoginInfo.json\";\nimport getWeb3 from \"./../../getWeb3\";\nimport \"./Authenticate.css\"; //import { withNavigation } from 'react-navigation';\n\nlet web3 = null; // Will hold the web3 instance\n\nclass Authenticate extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      web3: null,\n      accounts: null,\n      logincontract: null,\n      loading: false,\n      isaddr: \"\"\n    };\n\n    this.componentDidMount = async () => {\n      try {\n        console.warn(\"INside 1...........\"); // Get network provider and web3 instance.\n\n        web3 = await getWeb3(); // // Use web3 to get the user's accounts.\n\n        const accounts = await web3.eth.getAccounts(); // Get the contract instance.\n\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork = LoginInfoContract.networks[networkId];\n        const instance = new web3.eth.Contract(LoginInfoContract.abi, deployedNetwork && deployedNetwork.address);\n        this.setState({\n          web3,\n          accounts,\n          logincontract: instance\n        });\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n        console.error(error);\n      }\n    };\n\n    this.handlesignIn = async () => {\n      console.warn(\"INside 2...........\");\n      const metamaskAddr = this.state.accounts[0];\n      console.log(metamaskAddr);\n      const contract = this.state.logincontract; //Verify MetaMask account holder\n\n      const nonce = Math.floor(Math.random() * 10000);\n      var message = web3.utils.fromUtf8(\"One-time nonce: \" + nonce);\n      var acc = await web3.eth.getAccounts();\n      var signature = await web3.eth.personal.sign(message, acc[0]);\n      var hash = web3.utils.fromUtf8(\"One-time nonce: \" + nonce);\n      var signing_address = await web3.eth.personal.ecRecover(hash, signature);\n\n      if (signing_address !== metamaskAddr.toLowerCase()) {\n        window.alert(\"Account verification failed. Try again.\");\n        return;\n      }\n\n      const response = await contract.methods.getUser(metamaskAddr).call();\n\n      if (response['username'] === \"\" || response['email'] === \"\") {\n        window.alert(\"User does not exist. Please sign up\");\n        return;\n      }\n\n      const username = response['username'];\n      const email = response['email'];\n      console.log(username, email);\n      localStorage.setItem('UserName', username);\n      localStorage.setItem('Email', email);\n      localStorage.setItem('MetamaskAddr', metamaskAddr);\n      window.alert(\"Welcome back \" + username);\n      window.location.reload(); // window.alert(localStorage.getItem('UserName'));\n    };\n\n    this.handlesignUp = async event => {\n      console.warn(\"INside 3...........\");\n      event.preventDefault();\n      const name = event.target[0].value;\n      const email = event.target[1].value;\n      const addr = event.target[2].value;\n      console.log(name, email, addr);\n      const metamaskAddr = this.state.accounts[0]; //Verify MetaMask account holder\n\n      const nonce = Math.floor(Math.random() * 10000);\n      var message = web3.utils.fromUtf8(\"One-time nonce: \" + nonce);\n      var acc = await web3.eth.getAccounts();\n      var signature = await web3.eth.personal.sign(message, acc[0]);\n      var hash = web3.utils.fromUtf8(\"One-time nonce: \" + nonce);\n      var signing_address = await web3.eth.personal.ecRecover(hash, signature);\n\n      if (signing_address !== metamaskAddr.toLowerCase() || metamaskAddr !== addr) {\n        window.alert(\"Account verification failed. Try again.\");\n        return;\n      }\n\n      const contract = this.state.logincontract;\n      const response = await contract.methods.getUser(metamaskAddr).call();\n\n      if (response['username'] !== \"\" || response['email'] !== \"\") {\n        window.alert(\"User already exists. Log in with your MetaMask.\");\n        return;\n      }\n\n      await contract.methods.registerUser(metamaskAddr, name, email).send({\n        from: metamaskAddr\n      });\n      window.alert(\"User successfully created\");\n    };\n  }\n\n  render() {\n    if (localStorage.getItem('MetamaskAddr')) {\n      return React.createElement(Navigate, {\n        to: \"/dashboard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      });\n    }\n\n    if (!this.state.web3) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Loading Web3, accounts, and contract...\");\n    } // return <Navigate to=\"/\" />;\n\n\n    return React.createElement(\"div\", {\n      className: \"auth-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"svg\", {\n      className: \"svg_dstore\",\n      viewBox: \"0 0 960 300\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"symbol\", {\n      id: \"s-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"text\", {\n      \"text-anchor\": \"middle\",\n      x: \"50%\",\n      y: \"80%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Dstore\")), React.createElement(\"g\", {\n      class: \"g-ants\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"use\", {\n      xlinkHref: \"#s-text\",\n      class: \"text-copy-auth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(\"use\", {\n      xlinkHref: \"#s-text\",\n      class: \"text-copy-auth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(\"use\", {\n      xlinkHref: \"#s-text\",\n      class: \"text-copy-auth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(\"use\", {\n      xlinkHref: \"#s-text\",\n      class: \"text-copy-auth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(\"use\", {\n      xlinkHref: \"#s-text\",\n      class: \"text-copy-auth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"auth-inner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"metabutton\",\n      onClick: this.handlesignIn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Login with Metamask\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"h4-auth-or\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"\\xA0\\xA0 Or \\xA0\\xA0\")), React.createElement(\"h3\", {\n      id: \"sign\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Sign Up\"), React.createElement(\"form\", {\n      onSubmit: this.handlesignUp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"row-auth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      id: \"label\",\n      className: \"label-auth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"row-auth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      id: \"label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Email Address\"), React.createElement(\"input\", {\n      type: \"email\",\n      placeholder: \"Enter email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"row-auth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      id: \"label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"  Metamask Address: \"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"addr\",\n      value: this.state.accounts[0] ? this.state.accounts[0] : 'Click to connect to metamask',\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"newbutton\",\n      class: \"row-auth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"Submit\")))));\n  }\n\n}\n\nexport default Authenticate;","map":{"version":3,"sources":["/Users/akshaysanjaybodkhe/Downloads/DSTORE-Decentralised-Cloud-Storage-main/client/src/pages/Authenticate/Authenticate.js"],"names":["React","Component","useState","Navigate","LoginInfoContract","getWeb3","web3","Authenticate","state","accounts","logincontract","loading","isaddr","componentDidMount","console","warn","eth","getAccounts","networkId","net","getId","deployedNetwork","networks","instance","Contract","abi","address","setState","error","alert","handlesignIn","metamaskAddr","log","contract","nonce","Math","floor","random","message","utils","fromUtf8","acc","signature","personal","sign","hash","signing_address","ecRecover","toLowerCase","window","response","methods","getUser","call","username","email","localStorage","setItem","location","reload","handlesignUp","event","preventDefault","name","target","value","addr","registerUser","send","from","render","getItem"],"mappings":"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","sourcesContent":["import React, { Component,useState } from 'react';\r\nimport { Navigate } from \"react-router-dom\";\r\nimport LoginInfoContract from \"./../../contracts/LoginInfo.json\";\r\nimport getWeb3 from \"./../../getWeb3\";\r\nimport \"./Authenticate.css\";\r\n//import { withNavigation } from 'react-navigation';\r\n\r\nlet web3 = null; // Will hold the web3 instance\r\n\r\nclass Authenticate extends Component {\r\n  \r\n  state = { web3: null, accounts: null, logincontract: null, loading: false, isaddr: \"\" };\r\n\r\n  componentDidMount = async () => {\r\n    try {\r\n      console.warn(\"INside 1...........\");\r\n      // Get network provider and web3 instance.\r\n      web3 = await getWeb3();\r\n      // // Use web3 to get the user's accounts.\r\n      const accounts = await web3.eth.getAccounts();\r\n      // Get the contract instance.\r\n      const networkId = await web3.eth.net.getId();\r\n      const deployedNetwork = LoginInfoContract.networks[networkId];\r\n      const instance = new web3.eth.Contract(\r\n        LoginInfoContract.abi,\r\n        deployedNetwork && deployedNetwork.address,\r\n      );\r\n\r\n      this.setState({ web3, accounts, logincontract: instance });\r\n    } catch (error) {\r\n      // Catch any errors for any of the above operations.\r\n      alert(\r\n        `Failed to load web3, accounts, or contract. Check console for details.`,\r\n      );\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  handlesignIn = async () => {\r\n    console.warn(\"INside 2...........\");\r\n    const metamaskAddr = this.state.accounts[0];\r\n    console.log(metamaskAddr)\r\n    const contract = this.state.logincontract;\r\n\r\n    //Verify MetaMask account holder\r\n    const nonce = Math.floor(Math.random() * 10000);\r\n    var message = web3.utils.fromUtf8(\"One-time nonce: \" + nonce);\r\n    var acc = await web3.eth.getAccounts()\r\n    var signature = await web3.eth.personal.sign(message, acc[0])\r\n\r\n    var hash = web3.utils.fromUtf8(\"One-time nonce: \" + nonce)\r\n    var signing_address = await web3.eth.personal.ecRecover(hash, signature)\r\n\r\n    if (signing_address !== metamaskAddr.toLowerCase()) {\r\n      window.alert(\"Account verification failed. Try again.\")\r\n      return;\r\n    }\r\n\r\n    const response = await contract.methods.getUser(metamaskAddr).call();\r\n\r\n    if (response['username'] === \"\" ||\r\n      response['email'] === \"\") {\r\n      window.alert(\"User does not exist. Please sign up\");\r\n      return;\r\n    }\r\n\r\n    const username = response['username'];\r\n    const email = response['email'];\r\n\r\n    console.log(username, email);\r\n\r\n    localStorage.setItem('UserName', username);\r\n    localStorage.setItem('Email', email);\r\n    localStorage.setItem('MetamaskAddr', metamaskAddr);\r\n   \r\n    window.alert(\"Welcome back \" + username);\r\n    \r\n    window.location.reload();\r\n    // window.alert(localStorage.getItem('UserName'));\r\n\r\n  }\r\n\r\n\r\n  handlesignUp = async (event) => {\r\n    console.warn(\"INside 3...........\");\r\n    event.preventDefault();\r\n    const name = event.target[0].value;\r\n    const email = event.target[1].value;\r\n    const addr = event.target[2].value;\r\n    console.log(name, email, addr);\r\n\r\n    const metamaskAddr = this.state.accounts[0];\r\n\r\n    //Verify MetaMask account holder\r\n    const nonce = Math.floor(Math.random() * 10000);\r\n    var message = web3.utils.fromUtf8(\"One-time nonce: \" + nonce);\r\n    var acc = await web3.eth.getAccounts()\r\n    var signature = await web3.eth.personal.sign(message, acc[0])\r\n\r\n    var hash = web3.utils.fromUtf8(\"One-time nonce: \" + nonce)\r\n    var signing_address = await web3.eth.personal.ecRecover(hash, signature)\r\n\r\n    if (signing_address !== metamaskAddr.toLowerCase() || metamaskAddr !== addr) {\r\n      window.alert(\"Account verification failed. Try again.\")\r\n      return;\r\n    }\r\n\r\n\r\n    const contract = this.state.logincontract;\r\n\r\n    const response = await contract.methods.getUser(metamaskAddr).call();\r\n    if (response['username'] !== \"\" ||\r\n      response['email'] !== \"\") {\r\n      window.alert(\"User already exists. Log in with your MetaMask.\");\r\n      return;\r\n    }\r\n\r\n    await contract.methods.registerUser(metamaskAddr, name, email).send({ from: metamaskAddr });\r\n\r\n    window.alert(\"User successfully created\");\r\n\r\n  }\r\n\r\n  render() {\r\n    if(localStorage.getItem('MetamaskAddr'))\r\n    {\r\n      return <Navigate to=\"/dashboard\" />;\r\n    }\r\n    if (!this.state.web3) {\r\n      return <div>Loading Web3, accounts, and contract...</div>;\r\n    }\r\n    // return <Navigate to=\"/\" />;\r\n\r\n    return (\r\n      <div className=\"auth-wrapper\">\r\n        <svg className=\"svg_dstore\" viewBox=\"0 0 960 300\">\r\n          <symbol id=\"s-text\">\r\n            <text text-anchor=\"middle\" x=\"50%\" y=\"80%\">Dstore</text>\r\n          </symbol>\r\n          <g class=\"g-ants\">\r\n            <use xlinkHref=\"#s-text\" class=\"text-copy-auth\"></use>\r\n            <use xlinkHref=\"#s-text\" class=\"text-copy-auth\"></use>\r\n            <use xlinkHref=\"#s-text\" class=\"text-copy-auth\"></use>\r\n            <use xlinkHref=\"#s-text\" class=\"text-copy-auth\"></use>\r\n            <use xlinkHref=\"#s-text\" class=\"text-copy-auth\"></use>\r\n          </g>\r\n        </svg>\r\n        <div className=\"auth-inner\">\r\n          <div id=\"button\" >\r\n            <button type=\"submit\" className=\"metabutton\" onClick={this.handlesignIn}>Login with Metamask</button>\r\n          </div>\r\n          <div >\r\n            <h4 className=\"h4-auth-or\">&nbsp;&nbsp; Or &nbsp;&nbsp;</h4>\r\n          </div>\r\n          <h3 id=\"sign\">Sign Up</h3>\r\n\r\n          <form onSubmit={this.handlesignUp}>\r\n            <div class=\"row-auth\" >\r\n              <label id=\"label\" className=\"label-auth\">Name</label>\r\n              <input type=\"text\" placeholder=\"Enter name\" />\r\n            </div>\r\n            <div class=\"row-auth\" >\r\n              <label id=\"label\">Email Address</label>\r\n              <input type=\"email\" placeholder=\"Enter email\" />\r\n            </div>\r\n            <div class=\"row-auth\">\r\n              <label id=\"label\">  Metamask Address: </label>\r\n              <input type=\"text\" id=\"addr\" value={this.state.accounts[0] ? this.state.accounts[0] : 'Click to connect to metamask'} disabled />\r\n            </div>\r\n            <div id=\"newbutton\" class=\"row-auth\" >\r\n              <button type=\"submit\">Submit</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Authenticate;"]},"metadata":{},"sourceType":"module"}