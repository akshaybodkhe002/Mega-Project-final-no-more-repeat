{"ast":null,"code":"import _slicedToArray from \"/Users/akshaysanjaybodkhe/Downloads/DSTORE-Decentralised-Cloud-Storage-main/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/akshaysanjaybodkhe/Downloads/DSTORE-Decentralised-Cloud-Storage-main/client/src/pages/StoreHouse/drop-file-input/DropFileInput.jsx\";\nimport React, { useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './drop-file-input.css';\nimport { ImageConfig } from '../config/ImageConfig';\nimport uploadImg from '../images/cloud-upload-regular-240.png';\n\nconst DropFileInput = props => {\n  const wrapperRef = useRef(null);\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        fileList = _useState2[0],\n        setFileList = _useState2[1];\n\n  const onDragEnter = () => wrapperRef.current.classList.add('dragover');\n\n  const onDragLeave = () => wrapperRef.current.classList.remove('dragover');\n\n  const onDrop = () => wrapperRef.current.classList.remove('dragover');\n\n  const onFileDrop = e => {\n    const newFile = e.target.files[0];\n\n    if (newFile) {\n      const updatedList = [...fileList, newFile];\n      setFileList(updatedList);\n      props.onFileChange(updatedList);\n    }\n  };\n\n  const open = e => {\n    props.onUploadSubmit();\n  };\n\n  const fileRemove = file => {\n    const updatedList = [...fileList];\n    updatedList.splice(fileList.indexOf(file), 1);\n    setFileList(updatedList);\n    props.onFileChange(updatedList);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    ref: wrapperRef,\n    className: \"drop-file-input\",\n    onDragEnter: onDragEnter,\n    onDragLeave: onDragLeave,\n    onDrop: onDrop,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"drop-file-input__label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: uploadImg,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Drag & Drop your files here\")), React.createElement(\"input\", {\n    type: \"file\",\n    value: \"\",\n    onChange: onFileDrop,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })), fileList.length > 0 ? React.createElement(\"div\", {\n    className: \"drop-file-preview\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"drop-file-preview__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Ready to upload in IPFS\"), fileList.map((item, index) => React.createElement(\"div\", {\n    key: index,\n    className: \"drop-file-preview__item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: ImageConfig[item.type.split('/')[1]] || ImageConfig['default'],\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"drop-file-preview__item__info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, item.name), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, item.size, \"B\")), React.createElement(\"span\", {\n    className: \"drop-file-preview__item__del\",\n    onClick: () => fileRemove(item),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"x\"))), React.createElement(\"button\", {\n    className: \"btn1\",\n    type: \"button\",\n    onClick: open,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \" Upload to IPFS \")) : null);\n};\n\nDropFileInput.propTypes = {\n  onFileChange: PropTypes.func,\n  onUploadSubmit: PropTypes.func\n};\nexport default DropFileInput;","map":{"version":3,"sources":["/Users/akshaysanjaybodkhe/Downloads/DSTORE-Decentralised-Cloud-Storage-main/client/src/pages/StoreHouse/drop-file-input/DropFileInput.jsx"],"names":["React","useRef","useState","PropTypes","ImageConfig","uploadImg","DropFileInput","props","wrapperRef","fileList","setFileList","onDragEnter","current","classList","add","onDragLeave","remove","onDrop","onFileDrop","e","newFile","target","files","updatedList","onFileChange","open","onUploadSubmit","fileRemove","file","splice","indexOf","length","map","item","index","type","split","name","size","propTypes","func"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './drop-file-input.css';\n\nimport { ImageConfig } from '../config/ImageConfig';\nimport uploadImg from '../images/cloud-upload-regular-240.png';\n\nconst DropFileInput = props => {\n\n    const wrapperRef = useRef(null);\n\n    const [fileList, setFileList] = useState([]);\n\n    const onDragEnter = () => wrapperRef.current.classList.add('dragover');\n\n    const onDragLeave = () => wrapperRef.current.classList.remove('dragover');\n\n    const onDrop = () => wrapperRef.current.classList.remove('dragover');\n\n    const onFileDrop = (e) => {\n        const newFile = e.target.files[0];\n        if (newFile) {\n            const updatedList = [...fileList, newFile];\n            setFileList(updatedList);\n            props.onFileChange(updatedList);\n        }\n    }\n    const open = (e) => {\n        props.onUploadSubmit();\n    }\n\n    const fileRemove = (file) => {\n        const updatedList = [...fileList];\n        updatedList.splice(fileList.indexOf(file), 1);\n        setFileList(updatedList);\n        props.onFileChange(updatedList);\n    }\n\n    return (\n        <div>\n            <div\n                ref={wrapperRef}\n                className=\"drop-file-input\"\n                onDragEnter={onDragEnter}\n                onDragLeave={onDragLeave}\n                onDrop={onDrop}\n            >\n                <div className=\"drop-file-input__label\">\n                    <img src={uploadImg} alt=\"\" />\n                    <p>Drag & Drop your files here</p>\n                </div>\n                <input type=\"file\" value=\"\" onChange={onFileDrop} />\n\n            </div>\n            {\n                fileList.length > 0 ? (\n                    <div className=\"drop-file-preview\">\n                        <p className=\"drop-file-preview__title\">\n                            Ready to upload in IPFS\n                        </p>\n                        {\n                            fileList.map((item, index) => (\n                                <div key={index} className=\"drop-file-preview__item\">\n                                    <img src={ImageConfig[item.type.split('/')[1]] || ImageConfig['default']} alt=\"\" />\n                                    <div className=\"drop-file-preview__item__info\">\n                                        <p>{item.name}</p>\n                                        <p>{item.size}B</p>\n                                    </div>\n                                    <span className=\"drop-file-preview__item__del\" onClick={() => fileRemove(item)}>x</span>\n\n                                </div>\n                            ))\n\n                        }\n                        <button className=\"btn1\" type=\"button\" onClick={open}> Upload to IPFS </button>\n\n                    </div>\n\n\n                ) : null\n            }\n        </div>\n    );\n}\n\nDropFileInput.propTypes = {\n    onFileChange: PropTypes.func,\n    onUploadSubmit: PropTypes.func\n}\n\nexport default DropFileInput;\n"]},"metadata":{},"sourceType":"module"}