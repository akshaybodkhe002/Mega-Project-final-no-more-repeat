{"ast":null,"code":"var _jsxFileName = \"/Users/akshaysanjaybodkhe/Downloads/DSTORE-Decentralised-Cloud-Storage-main/client/src/pages/Dashboard/Dashboard.js\";\nimport React from \"react\";\nimport Navbar from \"./../../components/NavBar/NavBar\";\nimport \"./Dashboard.css\";\nimport getWeb3 from \"./../../getWeb3\";\nimport CloudStorageContract from \"./../../contracts/CloudStorage.json\";\nlet web3 = null;\n\nclass Dashboard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      web3: null,\n      accounts: null,\n      loading: false,\n      buffer: null,\n      tableData: null,\n      storedsize: 0,\n      fileuploaded: 0,\n      fileshared: 0\n    };\n\n    this.componentDidMount = async () => {\n      try {\n        // Get network provider and web3 instance.\n        web3 = await getWeb3(); // // Use web3 to get the user's accounts.\n\n        const accounts = await web3.eth.getAccounts(); // Get the contract instance.\n\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork = CloudStorageContract.networks[networkId];\n        const instance = new web3.eth.Contract(CloudStorageContract.abi, deployedNetwork && deployedNetwork.address);\n        this.setState({\n          web3,\n          accounts,\n          storagecontract: instance\n        });\n        let currentComponent = this; //Get uploaded files\n\n        instance.methods.getFiles(accounts[0]).call().then(function (response) {\n          if (response.length !== 0) {\n            var storesize = 0,\n                filenos = 0,\n                fileshare = 0;\n\n            for (var i = 0; i < response.length; i++) {\n              console.log(response[i]);\n              filenos += 1;\n              storesize += parseInt(response[i]['filesize']);\n              if (response[i]['shared'] === true) fileshare += 1;\n            }\n\n            storesize = Number(storesize / 1024).toFixed(2);\n            currentComponent.setState({\n              storedsize: storesize,\n              fileuploaded: filenos,\n              fileshared: fileshare\n            });\n          }\n        });\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n        console.error(error);\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"dcontainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"cover-photo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"https://cdn.pixabay.com/photo/2019/08/11/18/59/icon-4399701_1280.png\",\n      class: \"profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"profile-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, localStorage.getItem('UserName')), React.createElement(\"p\", {\n      class: \"about\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Email: \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), localStorage.getItem('Email'), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), \"Address: \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), localStorage.getItem('MetamaskAddr')))), React.createElement(\"div\", {\n      class: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"c-dashboardInfo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      class: \"heading heading5 hind-font medium-font-weight c-dashboardInfo__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Storage\"), React.createElement(\"span\", {\n      class: \"hind-font caption-12 c-dashboardInfo__count\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, this.state.storedsize, \"KB\"))), React.createElement(\"div\", {\n      class: \"c-dashboardInfo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      class: \"heading heading5 hind-font medium-font-weight c-dashboardInfo__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"No of files stored\"), React.createElement(\"span\", {\n      class: \"hind-font caption-12 c-dashboardInfo__count\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, this.state.fileuploaded))), React.createElement(\"div\", {\n      class: \"c-dashboardInfo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      class: \"heading heading5 hind-font medium-font-weight c-dashboardInfo__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"No of files shared by others\"), React.createElement(\"span\", {\n      class: \"hind-font caption-12 c-dashboardInfo__count\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, this.state.fileshared)))));\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/akshaysanjaybodkhe/Downloads/DSTORE-Decentralised-Cloud-Storage-main/client/src/pages/Dashboard/Dashboard.js"],"names":["React","Navbar","getWeb3","CloudStorageContract","web3","Dashboard","Component","state","accounts","loading","buffer","tableData","storedsize","fileuploaded","fileshared","componentDidMount","eth","getAccounts","networkId","net","getId","deployedNetwork","networks","instance","Contract","abi","address","setState","storagecontract","currentComponent","methods","getFiles","call","then","response","length","storesize","filenos","fileshare","i","console","log","parseInt","Number","toFixed","error","alert","render","localStorage","getItem"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Navbar from \"./../../components/NavBar/NavBar\";\r\nimport \"./Dashboard.css\";\r\n\r\nimport getWeb3 from \"./../../getWeb3\";\r\nimport CloudStorageContract from \"./../../contracts/CloudStorage.json\";\r\n\r\nlet web3 = null;\r\n\r\nclass Dashboard extends React.Component {\r\n\r\n  state = {\r\n    web3: null, accounts: null, loading: false, buffer: null, tableData: null,\r\n    storedsize: 0, fileuploaded:0,fileshared:0\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    try {\r\n      // Get network provider and web3 instance.\r\n      web3 = await getWeb3();\r\n      // // Use web3 to get the user's accounts.\r\n      const accounts = await web3.eth.getAccounts();\r\n      // Get the contract instance.\r\n      const networkId = await web3.eth.net.getId();\r\n      const deployedNetwork = CloudStorageContract.networks[networkId];\r\n\r\n      const instance = new web3.eth.Contract(\r\n        CloudStorageContract.abi,\r\n        deployedNetwork && deployedNetwork.address,\r\n      );\r\n\r\n      this.setState({ web3, accounts, storagecontract: instance });\r\n\r\n      let currentComponent = this;\r\n      //Get uploaded files\r\n      instance.methods.getFiles(accounts[0]).call()\r\n        .then(function (response) {\r\n          if (response.length !== 0) {\r\n\r\n            var storesize=0,filenos=0,fileshare=0;\r\n            for (var i = 0; i < response.length; i++) {\r\n\r\n              console.log(response[i])\r\n              filenos+=1;\r\n              storesize+=parseInt(response[i]['filesize']);\r\n              if(response[i]['shared']===true)\r\n                fileshare+=1;\r\n            }\r\n            storesize=Number(storesize/1024).toFixed(2);\r\n            currentComponent.setState({ storedsize: storesize, fileuploaded: filenos, fileshared: fileshare })\r\n          }\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n      // Catch any errors for any of the above operations.\r\n      alert(\r\n        `Failed to load web3, accounts, or contract. Check console for details.`,\r\n      );\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar />\r\n        <div class=\"left\">\r\n          <div class=\"dcontainer\">\r\n            <div class=\"cover-photo\">\r\n              <img src=\"https://cdn.pixabay.com/photo/2019/08/11/18/59/icon-4399701_1280.png\" class=\"profile\" />\r\n            </div>\r\n            <div class=\"profile-name\">{localStorage.getItem('UserName')}</div>\r\n\r\n            <p class=\"about\">\r\n              Email: <br />{localStorage.getItem('Email')}<br /><br />\r\n              Address: <br />{localStorage.getItem('MetamaskAddr')}\r\n            </p>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"right\">\r\n\r\n          <div class=\"c-dashboardInfo\">\r\n            <div class=\"wrap\">\r\n              <h4 class=\"heading heading5 hind-font medium-font-weight c-dashboardInfo__title\">Storage</h4>\r\n              <span class=\"hind-font caption-12 c-dashboardInfo__count\">{this.state.storedsize}KB</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"c-dashboardInfo\">\r\n            <div class=\"wrap\">\r\n              <h4 class=\"heading heading5 hind-font medium-font-weight c-dashboardInfo__title\">No of files stored\r\n              </h4><span class=\"hind-font caption-12 c-dashboardInfo__count\">{this.state.fileuploaded}</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"c-dashboardInfo\">\r\n            <div class=\"wrap\">\r\n              <h4 class=\"heading heading5 hind-font medium-font-weight c-dashboardInfo__title\">No of files shared by others\r\n              </h4><span class=\"hind-font caption-12 c-dashboardInfo__count\">{this.state.fileshared}</span>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}